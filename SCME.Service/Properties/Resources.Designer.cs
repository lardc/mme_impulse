//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCME.Service.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SCME.Service.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exception {0} during callback action: {1}.
        /// </summary>
        internal static string Error_BroadcastCommunication_Exception_during_callback_action {
            get {
                return ResourceManager.GetString("Error_BroadcastCommunication_Exception_during_callback_action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Operation - {3}, Node - {0}, Address - {1}, Message - {2}.
        /// </summary>
        internal static string Error_IOAdapter_Operation_Node_Address_Message {
            get {
                return ResourceManager.GetString("Error_IOAdapter_Operation_Node_Address_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Operation - {4}, Node - {0}, Address - {1}, Value - {2}, Message - {3}.
        /// </summary>
        internal static string Error_IOAdapter_Operation_Node_Address_Value_Message {
            get {
                return ResourceManager.GetString("Error_IOAdapter_Operation_Node_Address_Value_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exception: {0}.
        /// </summary>
        internal static string Error_LogicContainer_Exception {
            get {
                return ResourceManager.GetString("Error_LogicContainer_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Main testing, state - {0}, exception - {1}.
        /// </summary>
        internal static string Error_LogicContainer_Main_testing_state_exception {
            get {
                return ResourceManager.GetString("Error_LogicContainer_Main_testing_state_exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application error.
        /// </summary>
        internal static string Error_Program_Application_error {
            get {
                return ResourceManager.GetString("Error_Program_Application_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All disconnected.
        /// </summary>
        internal static string Log_LogicContainer_All_disconnected {
            get {
                return ResourceManager.GetString("Log_LogicContainer_All_disconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connected.
        /// </summary>
        internal static string Log_LogicContainer_Connected {
            get {
                return ResourceManager.GetString("Log_LogicContainer_Connected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Connection state: {0}.
        /// </summary>
        internal static string Log_LogicContainer_Connection_state {
            get {
                return ResourceManager.GetString("Log_LogicContainer_Connection_state", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed.
        /// </summary>
        internal static string Log_LogicContainer_Failed {
            get {
                return ResourceManager.GetString("Log_LogicContainer_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Main test manual stop.
        /// </summary>
        internal static string Log_LogicContainer_Main_test_manual_stop {
            get {
                return ResourceManager.GetString("Log_LogicContainer_Main_test_manual_stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Requested block modes: Gate - {0}, VTM - {1}, BVT - {2}, Clamp - {3}, dVdt - {4}, ATU - {5}, QrrTq - {6}, RAC - {7}, IH - {8}, TOU - {8}.
        /// </summary>
        internal static string Log_LogicContainer_Requested_block_modes {
            get {
                return ResourceManager.GetString("Log_LogicContainer_Requested_block_modes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application closed.
        /// </summary>
        internal static string Log_SystemHost_Application_closed {
            get {
                return ResourceManager.GetString("Log_SystemHost_Application_closed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application started.
        /// </summary>
        internal static string Log_SystemHost_Application_started {
            get {
                return ResourceManager.GetString("Log_SystemHost_Application_started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Control service is listening.
        /// </summary>
        internal static string Log_SystemHost_Control_service_is_listening {
            get {
                return ResourceManager.GetString("Log_SystemHost_Control_service_is_listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Database service is listening.
        /// </summary>
        internal static string Log_SystemHost_Database_service_is_listening {
            get {
                return ResourceManager.GetString("Log_SystemHost_Database_service_is_listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error while closing {0}: {1}.
        /// </summary>
        internal static string Log_SystemHost_Error_while_closing {
            get {
                return ResourceManager.GetString("Log_SystemHost_Error_while_closing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maintenance service is listening.
        /// </summary>
        internal static string Log_SystemHost_Maintenance_service_is_listening {
            get {
                return ResourceManager.GetString("Log_SystemHost_Maintenance_service_is_listening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Result journal opened.
        /// </summary>
        internal static string Log_SystemHost_Result_journal_opened {
            get {
                return ResourceManager.GetString("Log_SystemHost_Result_journal_opened", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exit.
        /// </summary>
        internal static string Program_Main_Exit {
            get {
                return ResourceManager.GetString("Program_Main_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Safety circuit is open.
        /// </summary>
        internal static string SafetyCircuitIsOpen {
            get {
                return ResourceManager.GetString("SafetyCircuitIsOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon ServiceIcon {
            get {
                object obj = ResourceManager.GetObject("ServiceIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}

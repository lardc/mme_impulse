<Window x:Class="SCME.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1280" d:DesignHeight="1024" Width="1280" Height="1024"
        xmlns:custom="clr-namespace:SCME.UI.CustomControl" 
        xmlns:props="clr-namespace:SCME.UI.Properties"
        xmlns:ui="clr-namespace:SCME.UI" DataContext="{Binding RelativeSource={RelativeSource Self}, Path=VM}"
        Name="mainWindow" Title="SCME.UI"
        WindowStyle="None"
        Focusable="False"
        ResizeMode="NoResize"
        WindowStartupLocation="Manual"
        Background="{StaticResource xGray2}"
        Closing="MainWindow_Closing"
        Closed="MainWindow_OnClosed"
        Icon="App.ico"
        PreviewGotKeyboardFocus="MyWindow_PreviewGotKeyboardFocus"
        MouseDown="MyWindow_MouseDown">

    <Window.Resources>

        <ui:BooleanToVisibilityConverter x:Key="B2V" />

        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource CLabelStyle}" >
            <Style.Triggers>
                <Trigger Property="Content" Value="offline">
                    <Setter Property="Foreground" Value="{StaticResource xRed1}" />
                </Trigger>
                <Trigger Property="Content" Value="online">
                    <Setter Property="Foreground" Value="DarkSeaGreen" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonPath" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource xBlue1}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="30,20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" Background="{TemplateBinding Background}">
                            <Path Margin="{TemplateBinding Padding}" Stretch="Uniform" StrokeThickness="5"
                                  Stroke="{TemplateBinding Foreground}"
                                  Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="{StaticResource DisableOpacity}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Window.Resources>

    <ScrollViewer Name="scrollViewer" VerticalScrollBarVisibility="Hidden"
                  CanContentScroll="False" Focusable="False">
        <StackPanel>
            <Grid Height="{Binding ElementName=mainWindow,Path=ActualHeight}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="80" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Grid.Row="0"
                       Name="titleLabel" Content="{Binding TopTitle}"
                       FontSize="28" 
                       HorizontalAlignment="Center" Width="auto" 
                       VerticalContentAlignment="Center"/>

                    <Label Grid.Column="1" Grid.Row="0"
                       Name="deviceLable" Content="MME005"
                       FontSize="28" Margin="0,0,15,0"
                       HorizontalAlignment="Right" />

                    <Label Grid.Column="2" Grid.Row="0"
                       Name="stateLable" Content="{Binding SyncState}"
                       FontSize="28"
                       HorizontalAlignment="Right" />

                    <StackPanel Grid.Column="3" Grid.Row="0" HorizontalAlignment="Right" Orientation="Horizontal">
                        <Border Margin="0,5,30,5" Padding="10, 0, 10, 0"
                            Visibility="{Binding Source={x:Static props:Settings.Default}, Path=ClampIsVisible, Converter={StaticResource B2V}}">
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                <Path x:Name="clampPath" Data="{StaticResource ClampPath}" Stroke="DarkSeaGreen"
                                  StrokeThickness="5" VerticalAlignment="Center"
                                  Stretch="UniformToFill" Margin="0, 5, 20, 10"/>
                                <Label x:Name="clampLabel" Content="{x:Static props:Resources.Clamp}" FontSize="28" HorizontalAlignment="Right"
                               VerticalContentAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <Label x:Name="connectionLabel" Content=" Restoring connection... " FontSize="28" HorizontalAlignment="Left"
                           VerticalContentAlignment="Center" Margin="30,00,60,0" Background="Yellow" Visibility="Collapsed"/>
                        <Path Data="{StaticResource CircutBrakePath}"
                          Stroke="{StaticResource xRed1}"
                          StrokeThickness="4" VerticalAlignment="Center"
                          Stretch="UniformToFill" Margin="0, 10, 30, 10" 
                          Visibility="{Binding IsSafetyBreakIconVisible, Converter={StaticResource B2V}}" />
                        <Label Content="{Binding SafetyMode}" Visibility="{Binding SafetyVisibility}" FontSize="24" Margin="0,0,30,0"/>
                        <Label x:Name="accountLabel" Content="User Account" FontSize="24" HorizontalAlignment="Left"
                           Visibility="{Binding AccountButtonVisibility}"
                           VerticalContentAlignment="Center" Margin="0,0,30,0" />
                        <Button Content="{StaticResource LogoutPath}" Click="Logout_Click"
                            Visibility="{Binding AccountButtonVisibility}"
                            Style="{StaticResource ButtonPath}" Margin="0, 10, 30, 10" Padding="5" />
                        <Button Content="{StaticResource Tech2Path}" Click="Tech_Click"
                            Visibility="{Binding GoTechButtonVisibility}"
                            Style="{StaticResource ButtonPath}" Padding="5" Margin="0, 10, 30, 10"/>
                        <Button Content="{StaticResource ClosePath}" Click="BtnExit_Click"
                            Style="{StaticResource ButtonPath}" Padding="5" Margin="0, 10, 30, 10"
                            Visibility="{Binding Source={x:Static props:Settings.Default}, Path=ExitButtonIsVisible, Converter={StaticResource B2V}}" />
                    </StackPanel>
                </Grid>
             

                <Frame x:Name="mainFrame" Grid.Column="0" Grid.Row="1"
                       NavigationUIVisibility="Hidden"
                       Navigating="Frame_Navigating"
                       Navigated="Frame_Navigated" />

            </Grid>

            <Border Name="keyboardBorder">
                <Popup Name="keyboardPopup"
                       Placement="Bottom"
                       AllowsTransparency="True"
                       Focusable="True"
                       PopupAnimation="None"
                       StaysOpen="True"
                       IsHitTestVisible="True">
                    <custom:VirtualKeyboard x:Name="defaultKeyboard" EnterPressed="Keyboard_EnterPressed"
                                      Width="{Binding ElementName=mainWindow, Path=ActualWidth}" />
                </Popup>
            </Border>

        </StackPanel>
    </ScrollViewer>

</Window>
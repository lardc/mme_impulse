//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCME.EntityDataDB
{
    using Microsoft.EntityFrameworkCore;
    using System;
    using System.Data.Common;

    public partial class Entities : DbContext
    {
        public Entities()
        {
        }

        private readonly string _ConnectionString;

        public Entities(string connectionString) 
        {
            _ConnectionString = connectionString;
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (optionsBuilder.IsConfigured == false)
                optionsBuilder.UseSqlite(_ConnectionString);
            else
                throw new NotImplementedException("");
            //optionsBuilder.UseSqlite(@"Data Source=DB\SCME_ResultsDB_Local.sqlite");
        }



        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<DEV_ERR>()
                .HasKey(c => new { c.DEV_ID, c.ERR_ID });

            modelBuilder.Entity<PROF_PARAM>()
               .HasKey(c => new { c.PROF_TESTTYPE_ID, c.PARAM_ID, c.PROF_ID });

            modelBuilder.Entity<MME_CODES_TO_PROFILES>()
               .HasKey(c => new { c.MME_CODE_ID, c.PROFILE_ID});


        }




        public virtual DbSet<DEVICE> DEVICES { get; set; }
        public virtual DbSet<GROUP> GROUPS { get; set; }
        public virtual DbSet<DEV_PARAM> DEV_PARAM { get; set; }
        public virtual DbSet<ERROR> ERRORS { get; set; }
        public virtual DbSet<PARAM> PARAMS { get; set; }
        public virtual DbSet<CONDITION> CONDITIONS { get; set; }
        public virtual DbSet<PROF_COND> PROF_COND { get; set; }
        public virtual DbSet<PROF_PARAM> PROF_PARAM { get; set; }
        public virtual DbSet<PROF_TEST_TYPE> PROF_TEST_TYPE { get; set; }
        public virtual DbSet<PROFILE> PROFILES { get; set; }
        public virtual DbSet<TEST_TYPE> TEST_TYPE { get; set; }
        public virtual DbSet<MME_CODE> MME_CODES { get; set; }
        public virtual DbSet<MME_CODES_TO_PROFILES> MME_CODES_TO_PROFILES { get; set; }
    }
}
